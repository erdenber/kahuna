** Variants **

[1] default

[2] from usbasp Makefile: 
HFUSE=0xc9  LFUSE=0xef

# Fuse atmega8 high byte HFUSE:
# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)
#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0
#        | | | |   | +-------- BOOTSZ1
#        | | | |   + --------- EESAVE (don't preserve EEPROM over chip erase)
#        | | | +-------------- CKOPT (full output swing)
#        | | +---------------- SPIEN (allow serial programming)
#        | +------------------ WDTON (WDT not always on)
#        +-------------------- RSTDISBL (reset pin is enabled)

# Fuse atmega8 low byte LFUSE:
# 0x9f = 1 0 0 1   1 1 1 1
# [sic]  ^ ^ \ /   \--+--/
#        | |  |       +------- CKSEL 3..0 (external >8M crystal)
#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)
#        | +------------------ BODEN (BrownOut Detector enabled)
#        +-------------------- BODLEVEL (2.7V)
#

[3] from fd0/usbload - branch "kahuna" (https://github.com/fd0/usbload/blob/kahuna/fuses.txt)
HFUSE=0xd9(?)  LFUSE=0x3f
        |--> Diff. to 0xc9 is CKOPT - should be 0 i.e. ON for 16MhZ: use 0xc9


    low fuse byte:
        clock-source external xtal: CHKSEL[1..3] = 111
        slowly rising power, 65ms startup timeout: CHKSEL[0] = 1, SUT[0..1] = 11
        enable brown-out detector: BODEN = 0
        require ~4v for safe operation: BODLEVEL = 0

    -> default: 0xe1
       new:     0b00111111 = 0x3f

    high fuse byte (with bootloader, leave at 0xd9 for use without bootloader): 
        1024 words bootloader size: BOOTSZ0 = 0
                                    BOOTSZ1 = 0

        reset vector, jump to bootloader on reset: BOOTRST = 0

    -> default: 0b11011001 = 0xd9
       new:     0b11011000 = 0xd8

    lock byte:

        SPM is not allowed to write to the Boot Loader section BLB12 = 1
                                                               BLB11 = 0
    -> default: 0x3f
	   new: 0x2f
	   

** Attempts: **
- default
- like [2]: HFUSE=0xc9  LFUSE=0xef
- combine [3]+[2]: HFUSE=0xc9  LFUSE=0x3f

HFUSE:
# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)
#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0
#        | | | |   | +-------- BOOTSZ1
#        | | | |   + --------- EESAVE (don't preserve EEPROM over chip erase)
#        | | | +-------------- CKOPT (full output swing)
#        | | +---------------- SPIEN (allow serial programming)
#        | +------------------ WDTON (WDT not always on)
#        +-------------------- RSTDISBL (reset pin is enabled)

LFUSE:
# 0x3f = 0 0 1 1   1 1 1 1
#        ^ ^ \ /   \--+--/
#        | |  |       +------- CKSEL 3..0 (external >8M crystal)
#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled, slowly rising power, 65ms startup timeout)
#        | +------------------ BODEN (BrownOut Detector enabled)
#        +-------------------- BODLEVEL (4.0V)



***********************************************************************+
 /*
     Original Reihenfolge:
     1) usb_disable() --> usbDeviceDisconnect()
     2) usb_enable() --> usbDeviceConnect()
     3) usb_init() --> serialno.+usbInit()
     4) sei()

     andere (Tutorial):
     1) usbInit()
     2) usbDeviceDisconnect()
     3) usbDeivceConnect()
     4) sei()
     
 */